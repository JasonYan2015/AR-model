set.seed(0)
x<-w<-rnorm(1000)
for(t in 2:1000) x[t]<-x[t-1]+w[t]
tsx<-tx(x)
tsx<-ts(x)
head(tsx,15)
help.start()
plot(tsx)
a<-ar(tsx);a
b<-ar(tsx,method="ols");b
d<-ar(tsx,method="mle");d
print(getwd())
setwd("/media/ajun/DATA/documents/r/data/")
print(getwd())
ls
data<-read.csv("donglianin.csv")
print(data)
print(data)
print(is.data.frame(data))
print(ncol(data))
print(nrow(data))
MAXxiaoyinup<-max(data$xiaoyinup)
print(MAXxiaoyinup)
lineMAXxiaoyinup<-subset(data,xiaoyinup==max(xiaoyinup))
print(lineMAXxiaoyinup)
print(nrow(data))
print(ncol(data))
print(subset(data,x==84))
print(subset(data,x=="84"))
print(subset(data,X=="84"))
print(subset(data,X>"8000"))
print(subset(data,X>8000))
x<-c(151,174,138,186,128,136,179,163,152,131)
y<-c(63,81,56,91,47,57,76,72,62,48)
relationX2Y<-lm(y-x)
relationX2Y<-lm(y~x)
print(relationX2Y)
print(summary(relationX2Y))
h170<-data.frame(x=170)
x170<-data.frame(x=170)
y170<-predict(relationX2Y,x170)
print(y170)
png(file="lineBYx&y.png")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
dev.off()
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
dev.off()
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
print(relationX2Y)
fitted(relationX2Y)
plot(x,y,xlab="height",ylab="weight")
abline(relationX2Y)
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(x,y,xlab="height",ylab="weight")
abline(relationX2Y)
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(x,y,abline(relationX2Y),xlab="height",ylab="weight")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(x,y,abline(relationX2Y),xlab="height",ylab="weight")
plot(y,x,abline(relationX2Y),xlab="height",ylab="weight")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,abline(relationX2Y),xlab="height",ylab="weight")
plot(y,x,abline(relationX2Y),xlab="height",ylab="weight")
plot(y,x,abline(lm(x~y)),xlab="height",ylab="weight")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,abline(lm(x~y)),xlab="height",ylab="weight")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,abline(lm(x~y)),xlab="height",ylab="weight")
plot(y,x,col="blue", main="Height&Weight Regression",abline(lm(x~y)),cex=1.3,pch=16,xlab="Weight in Kg", ylab="Height in cm")
plot(y,x,abline(lm(x~y)),xlab="height",ylab="weight")
print(summary(relationX2Y))
fit2<-lm(x~y+I(y^2))
print(summary(fit2))
predict(y,x,lines(y,fitted(fit2)),xlib="height",ylib="weight")
plot(y,x,lines(y,fitted(fit2)),xlib="height",ylib="weight")
warnings()
plot(y,x,lines(y,fitted(fit2)),xlab="height",ylab="weight")
dev.off()
plot(y,x,lines(y,fitted(fit2)),xlab="height",ylab="weight")
par(mfrow=c(2,2))
plot(fit2)
print(getwd())
plot(data)
print(data)
plot(data)
a<-ar(tsx);a
a<-ar(data);a
a<-ar(data);a
b<-ar(data,method="ols");b
plot(data==huabinup)
quit()
data
zhonghnanindown
sample
print(zhonghnanindown)
sample <- subset(data, id > 4300 & id < 7300)
data
data <- read.csv("donglianin.csv")
sample <- subset(data, id > 4300 & id < 7300)
zhonghnanindown <- sample$zhonghnanindown
zhonghnanindown
quit()
ls()
rm(a,b,d,fit2,h170,lineMAXxiaoyinup,MAXxiaoyinup,relationX2Y,w,x,x170,y,y170)
ls()
rm(t,tsx)
ls()
zhonghnanindown
newZhnindown <- zhonghnanindown + 1
newZhnindown
library(car)
lamda <- powerTransform
lamda <- powerTransform(newZhnindown)
lamda
d <- (I(newZhnindown^lamda-1)/lamda)
d <- (I(newZhnindown^0.3858-1)/lamda)
d <- (I(newZhnindown^0.3858-1)/0.3858)
d
write.csv(d,"gauss.csv",row.names="zhonghnanindown")
write.csv(d,"gauss.csv")
quit()
ls()
timeSample = sample$time
timeSample
zhonghnanindown1 <- c[zhonghnanindown, timeSample]
zhonghnanindown1 <- c(zhonghnanindown, timeSample)
zhonghnanindown1
zhonghnanindown
timeSample
summary(timeSample)
class(timeSample)
class(zhonghnanindown)
write.csv(timeSample,"timeSample.csv")
zhonghnanindown = read.csv("gauss.csv")
zhonghnanindown
ls()
d
\
d <- ar(zhonghnanindown);d
zhonghnanindown = read.csv("gauss.csv")
zhonghnanindown
zhonghnanindown = read.csv("gauss.csv")
zhonghnanindown
d = ar(zhonghnanindown);d
b = ar(zhonghnanindown,method="ols");b
d
b
d
b
a = ar(zhonghnanindown, method="mle");a
zhonghnanindown
zhonghnanindown <- sample$zhonghnanindown
zhonghnanindown
newZhnindown <- (I(zhonghnanindown^0.3858-1)/0.3858);
newzhnindown
newZhnindown
d = ar(newZhnindown,method="mel");d
newZhnindown
b = ar(newZhnindown,method="ols");b
a = ar(newZhnindown)
a
d = ar(newZhnindown,method＝"mle")
d = ar(newZhnindown,method="mle")
d
help(predict)
predict(a,10,n.ahead=5L)
test50 = predict(a,n.ahead=50L)
test50
plot(newZhnindown)
lines(newZhnindown$pred, col="red")
lines(newZhnindown$pred, col="red")
quit()
ls()
test50
write.csv(test50, "predict50.csv")
a
newZhnindown
move
b
d
tsp
p = predict(a, n.ahead = 50L)
p
test50
dataWithPredict = read.csv("dataWithPredict.csv")
plot(dataWithPredict)
dataWith
dataWithPredict
plot(dataWithPredict, type = "o")
samplePredict = subset(dataWithPredict, as.Date(time) > as.Date("2016/1/13 8:00"))
plot(samplePredict, type = "o")
samplePr
samplePredict
samplePredict = subset(dataWithPredict, as.Date(time) > as.Date("2016/1/13 8:00"))
samplePredict = read.table("dataWithPredict.csv")
dataWithPredict
samplePredict = subset(dataWithPredict, time > "2016/1/13 8:00")
samplePredict = subset(dataWithPredict, as.Date(time) > "2016/1/13 8:00")
samplePredict
plot(samplePredict, type = "o")
quit()
ls()
library(car)
data <- read.csv("donglianin.csv")
sample <- subset(data, id > 4300 & id < 7300)
zhonghnanindown = sample$zhonghnanindown
moveZhnindown = zhonghnanindown + 1
summary(p1 = powerTransform(moveZhnindown))
summary(p1 <- powerTransform(moveZhnindown))
newZhnindown <- (I(zhonghnanindown^0.3858-1)/0.3858)
a <- ar(newZhnindown)
a
tsp <- predict(a,n.ahead=50L)
tsp
plot(newZhnindown)
lines(tsp$pred,col='red')
lines(tsp$pred+tsp$se,col='blue')
lines(tsp$pred-tsp$se,col='blue')
quit()
ls()
zhonghnanindown
zhonghnanindown1
rm(zhonghnanindown1)
ls()
data
ls()
zhonghnanindown
ls()
sample
sample50 <- subset(data, id > 4300 & id < 7350)
zhonghnanindown50 <- sample50$zhonghnanindown
zhonghnanindown50
# 把原数据画图 
plot(newZhnindown)
# 把预测值和误差画出来
lines(tsp$pred,col='red')
lines(tsp$pred+tsp$se,col='blue')
lines(tsp$pred-tsp$se,col='blue')
plot(newZhnindown50)
plot(zhonghnanindown50)
lines(tsp$pred,col='red')
lines(tsp$pred+tsp$se,col='blue')
lines(tsp$pred-tsp$se,col='blue')
plot(newZhnindown)
newZhnindown50 <- (I(zhonghnanindown50^0.3858-1)/0.3858);
plot(newZhnindown50)
lines(tsp$pred,col='red')
lines(tsp$pred+tsp$se,col='blue')
lines(tsp$pred-tsp$se,col='blue')
jpeg("预测和原始对比（正态）.jpg")
save("./预测和原始对比（正态）.jpg")
save("预测和原始对比（正态）.jpg")
jpeg("预测和原始对比（正态）.jpg")
dev.off()
dev.off()
plot(newZhnindown50)
lines(tsp$pred,col='red')
quit()
ls()
plot(newZhnindown50)
lines(tsp$pred,col='red')
lines(tsp$pred+tsp$se,col='blue')
lines(tsp$pred-tsp$se,col='blue')
quit()
ls()
sample <- subset(data, id > 5000 & id < 6000);
sample50 <- subset(data, id > 5000 & id < 6050);
# 抽样　建立一元回归　抽样中华南入市下桥路口数据,因为(参考)[http://bbs.pinggu.org/thread-2741562-1-1.html]所说，数据不能有零，所以加上１偏移
zhonghnanindown <- sample$zhonghnanindown;
zhonghnanindown50 <- sample50$zhonghnanindown;
moveZhnindown <- sample$zhonghnanindown + 1;
summary(p1 <- powerTransform(moveZhnindown));
library(car)
summary(p1 <- powerTransform(moveZhnindown));
newZhnindown <- (I(zhonghnanindown^0.3858-1)/0.3858);
a <- ar(newZhnindown)
a
tsp<-predict(a,n.ahead=50L)
tsp
result <- I((1 + 0.3858*tsp)^(1/λ))
result <- I((1 + 0.5494*tsp)^(1/0.5494))
pred <- I((1 + 0.5494*tsp$pred)^(1/0.5494))
se <- I((1 + 0.5494*tsp$se)^(1/0.5494))
plot(zhonghnanindown50)
lines(pred,col='red')
lines(pred,col='blue')
lines(pred,col='red')
lines(pred+se,col='blue')
lines(pred-se,col='blue')
tsp5<-predict(a,n.ahead=5L)
tsp5
pred5 <- I((1 + 0.5494*tsp5$pred)^(1/0.5494))
se5 <- I((1 + 0.5494*tsp5$se)^(1/0.5494))
plot(zhonghnanindown50)
lines(pred50,col='red')
lines(pred5,col='red')
lines(pred5+se5,col='blue')
lines(pred5-se5,col='blue')
newZhnindown <- (I(zhonghnanindown^0.5494-1)/0.5494);
a <- ar(newZhnindown)
a
summary(p1 <- powerTransform(moveZhnindown));
tsp<-predict(a,n.ahead=50L)
tsp
pred <- I((1 + 0.5494*tsp$pred)^(1/0.5494))
se <- I((1 + 0.5494*tsp$se)^(1/0.5494))
plot(zhonghnanindown50)
# 把预测值和误差画出来
lines(pred,col='red')
lines(pred+se,col='blue')
lines(pred-se,col='blue')
quit()
ls()
auto.arima(zhonghnanindown)
library('forecast')
auto.arima(zhonghnanindown)
auto.arima(zhonghnanindown, approximation = FALSE)
aaa <- ar(newZhnindown, aic = TRUE);aaa
aaa <- ar(newZhnindown, aic = TRUE, order.max = 10);aaa
aaa <- ar(newZhnindown, aic = TRUE);aaa
aaa <- ar(newZhnindown, aic = TRUE, order.max = 10);aaa
ndiffs(zhonghnanindown)
ndiffs(newZhnindown)
acf(zhonghnanindown)
pacf(zhonghnanindown)
Acf(zhonghnanindown)
Pacf(zhonghnanindown)
adf.test(zhonghnanindown)
install.packages('tseries')
library('tseries')
adf.test(zhonghnanindown)
arima(zhonghnanindown, order=c(2, 0, 3))
auto.arima(zhonghnanindown)
airma(zhonghnanindown, order=c(2,0,2))
arima(zhonghnanindown, order=c(2,0,2))
arima(zhonghnanindown, order=c(2,1,2))
arima(zhonghnanindown, order=c(2,0,3))
arima(zhonghnanindown, order=c(2,1,3))
dZhonghnindown <- diff(zhonghnanindown)
Acf(dZhonghnindown)
Pacf(dZhonghnindown)
Acf(dZhonghnindown)
auto.arima(dZhonghnindown)
arima(zhonghnanindown, order=c(1,1,2))
Pacf(dZhonghnindown)
Acf(dZhonghnindown)
arima(zhonghnanindown, order=c(3,1,1))
fit <- arima(zhonghnanindown, order=c(2,0,3))
fit <- arima(zhonghnanindown, order=c(2,1,2))
qqnorm(fit$residuals)
qqline(fit$residuals)
Box.test(fit$residuals, type="Ljung-Box")
adf.test(dZhonghnindown)
Acf(dZhonghnindown)
Pacf(dZhonghnindown)
auto.arima(zhonghnanindown)
var(zhonghnanindown)
aov(zhonghnanindown)
ndiffs(x = zhonghnanindown)
quit()
library('forecast')
ls()
Acf(zhonghnanindown)
Acf(dZhonghnindown)
tZhonghnindown <- diff(dZhonghnindown)
Acf(tZhonghnindown)
Acf(diff(tZhonghnindown))
library('tseries')
adf.test(dZhonghnindown)
adf.test(zhonghnanindown)
arima(zhonghnanindown, order = c(0,1,1))
arima(zhonghnanindown, order = c(1,1,0))
arima(zhonghnanindown, order = c(1,1,1))
arima(zhonghnanindown, order = c(2,1,1))
arima(zhonghnanindown, order = c(1,1,2))
arima(zhonghnanindown, order = c(2,1,2))
arima(zhonghnanindown, order = c(2,1,3))
arima(zhonghnanindown, order = c(3,1,2))
arima(zhonghnanindown, order = c(3,1,3))
arima(zhonghnanindown, order = c(4,1,3))
arima(zhonghnanindown, order = c(4,1,4))
arima(zhonghnanindown, order = c(3,1,4))
arima(zhonghnanindown, order = c(5,1,4))
arima(zhonghnanindown, order = c(5,1,5))
arima(zhonghnanindown, order = c(4,1,5))
auto.arima(zhonghnanindown)
auto.arima(dZhonghnindown)
res1 <- residuals(a)
shapiro.test(res1)
arima515 <- arima(zhonghnanindown, order = c(5,1,5))
res515 <- residuals(arima515)
shapiro.test(res515)
AIC(a, arima515)
kpss.test(zhonghnanindown)
BoxCox.lambda(dZhonghnindown)
\
dZhonghnindown
plot(dZhonghnindown)
BoxCox.lambda(dZhonghnindown, lower = 0)
Pacf(dZhonghnindown)
Acf(dZhonghnindown)
arima(zhonghnanindown, order = c(3,1,1))
auto.arima(zhonghnanindown, approximation = FALSE)
auto.arima(zhonghnanindown, D = 1, approximation = FALSE)
dZhonghnindown
min(dZhonghnindown)
library('car')
summary(pD <- powerTransform(dZhonghnindown + 34))
quit()
help.start()
ls
ls()
zhonghnanindown
summary(zhonghnanindown)
zhonghnanindown
plot(zhonghnanindown)
fit
fitPoisson <- glm(Y ~ x, data = zhonghnanindown, family = poisson())
ls()
testD <- subset(data, id > 5000 & id < 6000, select = c(id, time, zhonghnanindown))
testD
plot(testD)
fitPoisson <- glm(zhonghnanindown ~ zhonghnanindown, data = testD, family=poisson())
quit()
